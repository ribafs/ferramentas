version: "3.6" 
services:
    postgres:
      container_name: postgres-container
      restart: always
      build:
        context: .
        dockerfile: ./Dockerfile-postgres
      ports:
        - "6432:5432"
      volumes:
        - postgres:/var/lib/postgresql/data
      environment:
        POSTGRES_USER: postgres
        POSTGRES_PASSWORD: postgres
        PGDATA: /var/lib/postgresql/data/pgdata
      tty: true
      networks:
      - alpine-net

    maria:
      container_name: maria-container
      restart: always
      build:
        context: .
        dockerfile: Dockerfile-maria
      volumes: 
        - maria:/var/lib/mysql:rw
      ports:
        - "3333:3306"
      environment:
        TZ: "America/Fortaleza"
        MYSQL_DATABASE: "testes"
        MYSQL_ROOT_PASSWORD: "root"
      tty: true
      networks:
      - alpine-net

    apache:
      container_name: apache-container
      build:
        context: .
        dockerfile: Dockerfile-apache
      volumes:
        - ./apache:/var/www/html
      ports:
        - "8888:80"
      networks:
      - alpine-net

    php:
      container_name: php-container
      build:
        context: .
        dockerfile: Dockerfile-php
      environment:
        - PHP_SHORT_OPEN_TAG=On
        - PHP_ERROR_REPORTING=E_ALL
        - PHP_DISPLAY_ERRORS=On
        - PHP_HTML_ERRORS=On
        - PHP_XDEBUG_ENABLED=true

    sqlite:
      container_name: sqlite-container
      restart: always
      build:
        context: .
        dockerfile: ./Dockerfile-sqlite
      volumes:
        - ./sqlite:/var/lib/sqlite
      tty: true
      networks:
      - alpine-net

    adminer:
      container_name: adminer-container
      build:
        context: .
        dockerfile: Dockerfile-adminer
      volumes:
        - ./adminer:/var/www/html
      networks:
      - alpine-net

networks:
  alpine-net:
    driver: bridge

volumes:
  postgres:
  maria:
  web:
  sqlite:
  adminer:
# Executar: composer: 
# docker-compose down -v
# docker-compose up -d 

